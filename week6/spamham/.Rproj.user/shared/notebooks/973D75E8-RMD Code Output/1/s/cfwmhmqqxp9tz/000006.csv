"0","#c) Pool all of the likelihood-ratio values from the messages in all of the folds,"
"0","#i.e., from all of the training data, and use these values and the typeIErrorRate() function "
"0","#to select threshold that achieves a 1% Type I error."
"0","# Function to find the type I error rates"
"0","typeIErrorRates = function(llrVals, isSpam) "
"0","{"
"0","  o = order(llrVals)"
"0","  llrVals =  llrVals[o]"
"0","  isSpam = isSpam[o]"
"0","  "
"0","  idx = which(!isSpam)"
"0","  N = length(idx)"
"0","  list(error = (N:1)/N, values = llrVals[idx])"
"0","}"
"0","# Function to find the type II error rates"
"0","typeIIErrorRates = function(llrVals, isSpam) {"
"0","  o = order(llrVals)"
"0","  llrVals =  llrVals[o]"
"0","  isSpam = isSpam[o]"
"0","  "
"0","  idx = which(isSpam)"
"0","  N = length(idx)"
"0","  list(error = (1:(N))/N, values = llrVals[idx])"
"0","}  "
"0","#To find the estimate of threshold in order to have typeI error less than 1%."
"0","xI = typeIErrorRates(testLLR, testIsSpam)"
"0","xII = typeIIErrorRates(testLLR, testIsSpam)"
"0","threshold = round(min(xI$values[xI$error <= 0.01]))"
"0","threshold"
"1","[1]"
"1"," -43"
"1","
"
"0","typeIerror = max(xI$error[ xI$values > threshold ])"
"0","typeIerror"
"1","[1]"
"1"," 0.01035822"
"1","
"
"0","typeIIerror = max(xII$error[ xII$values < threshold ])"
"0","typeIIerror"
"1","[1]"
"1"," 0.02252816"
"1","
"
"0","#A plot of type I and II error rate vs. LLR values"
"0","cols = brewer.pal(9, ""Set1"")[c(3, 1, 2)]"
"0","plot(xII$error ~ xII$values,  type = ""l"", col = cols[1], lwd = 3,"
"0","     xlim = c(-300, 250), ylim = c(0, 1),"
"0","     xlab = ""Log Likelihood Ratio Values"", ylab=""Error Rate"","
"0","     main = ""The Error Rates For Spam and Ham Misclassifications"")"
